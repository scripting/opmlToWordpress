<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sun, 13 Aug 2023 15:02:21 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: opmlToWordpress</title>
		<dateCreated>Sun, 13 Aug 2023 14:39:51 GMT</dateCreated>
		<dateModified>Sun, 13 Aug 2023 15:02:21 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 7, 8, 15, 25, 47, 52, 58, 61, 65, 68, 71, 73, 78, 80, 85, 86, 87, 88, 89, 93, 100, 114</expansionState>
		<vertScrollState>7</vertScrollState>
		<windowTop>221</windowTop>
		<windowLeft>846</windowLeft>
		<windowBottom>1090</windowBottom>
		<windowRight>2069</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/opmltowordpress/" created="Thu, 13 Jul 2023 14:21:20 GMT">
			<outline text="worknotes.md" created="Sun, 18 Jun 2023 16:13:00 GMT">
				<outline text="#### 8/13/23; 10:57:17 AM by DW" created="Sun, 13 Aug 2023 14:57:16 GMT">
					<outline text="Changed the name of the app to opwp.js -- the previous name opmltowordpress.js would have been all kinds of trouble. ;-)" created="Sun, 13 Aug 2023 14:57:17 GMT"/>
					<outline text="Add an example config.json to the folder on github." created="Sun, 13 Aug 2023 14:57:49 GMT"/>
					</outline>
				<outline text="#### 8/12/23; 6:34:43 PM by DW" created="Sat, 12 Aug 2023 22:34:42 GMT">
					<outline text="Started." created="Sat, 12 Aug 2023 22:34:44 GMT"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;opmltowordpress&quot;,"/>
					<outline text="&quot;description&quot;: &quot;A Node.js app that keeps outlines in sync with WordPress sites.&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;main&quot;: &quot;optowp.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;request&quot;: &quot;*&quot;," isComment="true"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;,"/>
						<outline text="&quot;wordpress&quot;: &quot;*&quot;," created="Sun, 13 Aug 2023 12:00:44 GMT"/>
						<outline text="&quot;opml&quot;: &quot;*&quot;" created="Mon, 08 Mar 2021 15:15:44 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="optowp.js">
				<outline text="var myProductName = &quot;opmlToWordpress&quot;, myVersion = &quot;0.4.0&quot;;"/>
				<outline text="" created="Sat, 12 Aug 2023 22:37:22 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text="const request = require (&quot;request&quot;);" isComment="true"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);"/>
				<outline text="const opml = require (&quot;opml&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const wordpress = require (&quot;wordpress&quot;); "/>
				<outline text="" created="Mon, 24 Jul 2023 13:43:29 GMT"/>
				<outline text="var config = {" created="Fri, 10 Feb 2023 16:10:01 GMT">
					<outline text="port: process.env.PORT || 3231," created="Fri, 10 Feb 2023 16:12:18 GMT"/>
					<outline text="flAllowAccessFromAnywhere: true, "/>
					<outline text="flLogToConsole: true,"/>
					<outline text="users: new Array ()" created="Sat, 12 Aug 2023 23:07:58 GMT"/>
					<outline text="};" created="Fri, 10 Feb 2023 16:12:11 GMT"/>
					</outline>
				<outline text="" created="Sun, 13 Aug 2023 12:15:59 GMT"/>
				<outline text="var stats = {" created="Sun, 13 Aug 2023 12:16:00 GMT">
					<outline text="savedPosts: new Array ()" created="Sun, 13 Aug 2023 12:16:27 GMT"/>
					<outline text="};" created="Sun, 13 Aug 2023 12:16:03 GMT"/>
					</outline>
				<outline text="var flStatsChanged = true;" created="Sun, 13 Aug 2023 12:17:14 GMT"/>
				<outline text="const fnameStats = &quot;stats.json&quot;;" created="Sun, 13 Aug 2023 12:19:47 GMT"/>
				<outline text="" created="Sat, 12 Aug 2023 22:47:24 GMT"/>
				<outline text="function statsChanged () {" created="Sun, 13 Aug 2023 12:26:51 GMT">
					<outline text="flStatsChanged = true;" created="Sun, 13 Aug 2023 12:26:56 GMT"/>
					<outline text="}" created="Sun, 13 Aug 2023 12:27:01 GMT"/>
					</outline>
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (!err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="" created="Sat, 12 Aug 2023 23:36:10 GMT"/>
				<outline text="function notComment (item) { //11/5/20 by DW">
					<outline text="return (!utils.getBoolean (item.isComment));"/>
					<outline text="}"/>
					</outline>
				<outline text="function getItemSubs (itemFromOutline) { //get the text from the subs" created="Sun, 13 Aug 2023 11:32:38 GMT">
					<outline text="var theText = &quot;&quot;;" created="Sun, 13 Aug 2023 11:35:41 GMT"/>
					<outline text="if (itemFromOutline.subs !== undefined) {" created="Sun, 13 Aug 2023 11:35:42 GMT">
						<outline text="itemFromOutline.subs.forEach (function (item) {" created="Sun, 13 Aug 2023 11:35:55 GMT">
							<outline text="const itemText = (item.text === undefined) ? &quot;&quot; : &quot;&lt;p&gt;&quot; + item.text + &quot;&lt;/p&gt;\n&quot; ;" created="Sun, 13 Aug 2023 11:39:30 GMT"/>
							<outline text="theText += itemText + getItemSubs (item);" created="Sun, 13 Aug 2023 11:37:17 GMT"/>
							<outline text="});" created="Sun, 13 Aug 2023 11:36:02 GMT"/>
							</outline>
						<outline text="}" created="Sun, 13 Aug 2023 11:35:44 GMT"/>
						</outline>
					<outline text="return (theText);" created="Sun, 13 Aug 2023 11:35:42 GMT"/>
					<outline text="}" created="Sun, 13 Aug 2023 11:32:46 GMT"/>
					</outline>
				<outline text="function getRenderedText (theText) {" created="Sun, 13 Aug 2023 11:41:55 GMT">
					<outline text="return (theText); //placeholder" created="Sun, 13 Aug 2023 11:42:08 GMT"/>
					<outline text="}" created="Sun, 13 Aug 2023 11:42:03 GMT"/>
					</outline>
				<outline text="function getSavedPost (siteurl, created) {" created="Sun, 13 Aug 2023 11:51:52 GMT">
					<outline text="var theSavedPost = undefined;" created="Sun, 13 Aug 2023 12:43:50 GMT"/>
					<outline text="stats.savedPosts.forEach (function (item) {" created="Sun, 13 Aug 2023 12:42:43 GMT">
						<outline text="if ((item.siteurl == siteurl) &amp;&amp; (item.created == created)) {" created="Sun, 13 Aug 2023 12:43:19 GMT">
							<outline text="theSavedPost = item;" created="Sun, 13 Aug 2023 12:43:41 GMT"/>
							<outline text="}" created="Sun, 13 Aug 2023 12:43:36 GMT"/>
							</outline>
						<outline text="});" created="Sun, 13 Aug 2023 12:42:49 GMT"/>
						</outline>
					<outline text="return (theSavedPost);" created="Sun, 13 Aug 2023 11:52:37 GMT"/>
					<outline text="}" created="Sun, 13 Aug 2023 11:52:31 GMT"/>
					</outline>
				<outline text="function postChanged (theNewPost, theSavedPost) {" created="Sat, 12 Aug 2023 23:42:29 GMT">
					<outline text="var flchanged = false;" created="Sun, 13 Aug 2023 12:53:24 GMT"/>
					<outline text="if ((theNewPost.title != theSavedPost.title) || (theNewPost.content != theSavedPost.content)) {" created="Sun, 13 Aug 2023 12:52:27 GMT">
						<outline text="flchanged = true;" created="Sun, 13 Aug 2023 12:53:10 GMT"/>
						<outline text="theSavedPost.title = theNewPost.title;" created="Sun, 13 Aug 2023 12:53:34 GMT"/>
						<outline text="theSavedPost.content = theNewPost.content;" created="Sun, 13 Aug 2023 12:53:40 GMT"/>
						<outline text="statsChanged ();" created="Sun, 13 Aug 2023 12:53:49 GMT"/>
						<outline text="}" created="Sun, 13 Aug 2023 12:53:14 GMT"/>
						</outline>
					<outline text="return (flchanged);" created="Sun, 13 Aug 2023 12:53:15 GMT"/>
					<outline text="}" created="Sun, 13 Aug 2023 12:52:26 GMT"/>
					</outline>
				<outline text="function processOutline (theUser, theOutline, callback) {" created="Sat, 12 Aug 2023 23:36:10 GMT">
					<outline text="var theLog = new Array ();" created="Sun, 13 Aug 2023 13:38:03 GMT"/>
					<outline text="const client = wordpress.createClient ({">
						<outline text="url: theUser.siteurl,"/>
						<outline text="username: theUser.username,"/>
						<outline text="password: theUser.password"/>
						<outline text="});"/>
						</outline>
					<outline text="function getPostList () {" created="Sun, 13 Aug 2023 14:12:25 GMT">
						<outline text="var thePostList = new Array ();" created="Sun, 13 Aug 2023 14:22:04 GMT"/>
						<outline text="theOutline.opml.body.subs.forEach (function (theMonth) {" created="Sat, 12 Aug 2023 23:37:07 GMT">
							<outline text="if (theMonth.subs !== undefined) {" created="Sat, 12 Aug 2023 23:48:19 GMT">
								<outline text="theMonth.subs.forEach (function (theDay) {" created="Sat, 12 Aug 2023 23:40:52 GMT">
									<outline text="if (theDay.subs !== undefined) {" created="Sat, 12 Aug 2023 23:48:48 GMT">
										<outline text="theDay.subs.forEach (function (item) {" created="Sat, 12 Aug 2023 23:41:09 GMT">
											<outline text="if (notComment (item)) {" created="Sat, 12 Aug 2023 23:42:39 GMT">
												<outline text="if ((item.type !== undefined) &amp;&amp; (item.type == &quot;outline&quot;)) {" created="Sat, 12 Aug 2023 23:41:26 GMT">
													<outline text="thePostList.push (item);" created="Sun, 13 Aug 2023 14:14:53 GMT"/>
													<outline text="}" created="Sat, 12 Aug 2023 23:41:52 GMT"/>
													</outline>
												<outline text="}" created="Sat, 12 Aug 2023 23:42:43 GMT"/>
												</outline>
											<outline text="});" created="Sat, 12 Aug 2023 23:41:16 GMT"/>
											</outline>
										<outline text="}" created="Sat, 12 Aug 2023 23:48:58 GMT"/>
										</outline>
									<outline text="});" created="Sat, 12 Aug 2023 23:40:59 GMT"/>
									</outline>
								<outline text="}" created="Sat, 12 Aug 2023 23:48:28 GMT"/>
								</outline>
							<outline text="});" created="Sat, 12 Aug 2023 23:40:36 GMT"/>
							</outline>
						<outline text="return (thePostList);" created="Sun, 13 Aug 2023 14:22:15 GMT"/>
						<outline text="}" created="Sun, 13 Aug 2023 14:12:33 GMT"/>
						</outline>
					<outline text="function processPost (itemFromOutline, callback) {" created="Sat, 12 Aug 2023 23:44:26 GMT">
						<outline text="console.log (&quot;processPost: itemFromOutline == &quot; + utils.jsonStringify (itemFromOutline));" created="Sat, 12 Aug 2023 23:44:38 GMT"/>
						<outline text="var thePost = {" created="Wed, 28 Jun 2023 13:45:34 GMT">
							<outline text="title: &quot;&quot;," created="Wed, 28 Jun 2023 13:47:53 GMT"/>
							<outline text="content: &quot;&quot;," created="Wed, 28 Jun 2023 13:47:56 GMT"/>
							<outline text="status: &quot;publish&quot; //omit this to create a draft that isn't published" created="Sun, 23 Apr 2023 15:23:39 GMT"/>
							<outline text="};" created="Wed, 28 Jun 2023 13:46:10 GMT"/>
							</outline>
						<outline text="if (itemFromOutline.subs === undefined) { //singular item" created="Sun, 13 Aug 2023 11:30:37 GMT">
							<outline text="thePost.content = getRenderedText (itemFromOutline.text);" created="Sun, 13 Aug 2023 11:31:29 GMT"/>
							<outline text="}" created="Sun, 13 Aug 2023 11:31:09 GMT"/>
							</outline>
						<outline text="else { //titled item" created="Sun, 13 Aug 2023 11:31:44 GMT">
							<outline text="thePost.title = itemFromOutline.text;" created="Sun, 13 Aug 2023 11:42:27 GMT"/>
							<outline text="thePost.content = getItemSubs (itemFromOutline);" created="Sun, 13 Aug 2023 11:32:20 GMT"/>
							<outline text="}" created="Sun, 13 Aug 2023 11:31:48 GMT"/>
							</outline>
						<outline text="console.log (&quot;processPost: thePost == &quot; + utils.jsonStringify (thePost));" created="Sat, 12 Aug 2023 23:44:38 GMT"/>
						<outline text="var savedPost = getSavedPost (theUser.siteurl, itemFromOutline.created);" created="Sun, 13 Aug 2023 11:49:37 GMT"/>
						<outline text="if (savedPost === undefined) {" created="Sun, 13 Aug 2023 11:49:38 GMT">
							<outline text="client.newPost (thePost, function (err, idNewPost) {" created="Sun, 23 Apr 2023 15:08:51 GMT">
								<outline text="if (err) {" created="Sun, 23 Apr 2023 15:10:04 GMT">
									<outline text="callback (err);" created="Sun, 23 Apr 2023 15:30:14 GMT"/>
									<outline text="}" created="Sun, 23 Apr 2023 15:10:12 GMT"/>
									</outline>
								<outline text="else {" created="Sun, 23 Apr 2023 15:10:13 GMT">
									<outline text="console.log (&quot;processPost: idNewPost == &quot; + idNewPost);" created="Tue, 27 Jun 2023 12:55:44 GMT"/>
									<outline text="const theSavedPost = {" created="Sun, 13 Aug 2023 12:24:46 GMT">
										<outline text="title: thePost.title," created="Sun, 13 Aug 2023 12:25:09 GMT"/>
										<outline text="content: thePost.content," created="Sun, 13 Aug 2023 12:25:13 GMT"/>
										<outline text="id: idNewPost," created="Sun, 13 Aug 2023 12:25:18 GMT"/>
										<outline text="created: itemFromOutline.created," created="Sun, 13 Aug 2023 12:41:25 GMT"/>
										<outline text="siteurl: theUser.siteurl" created="Sun, 13 Aug 2023 12:25:29 GMT"/>
										<outline text="}" created="Sun, 13 Aug 2023 12:24:55 GMT"/>
										</outline>
									<outline text="stats.savedPosts.push (theSavedPost);" created="Sun, 13 Aug 2023 12:24:46 GMT"/>
									<outline text="statsChanged ();" created="Sun, 13 Aug 2023 12:26:43 GMT"/>
									<outline text="callback (undefined, &quot;newPost: id == &quot; + idNewPost + &quot;.&quot;);" created="Sun, 23 Apr 2023 15:30:14 GMT"/>
									<outline text="}" created="Sun, 23 Apr 2023 15:10:17 GMT"/>
									</outline>
								<outline text="});" created="Sun, 23 Apr 2023 15:10:01 GMT"/>
								</outline>
							<outline text="}" created="Sun, 13 Aug 2023 11:52:51 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 13 Aug 2023 11:52:51 GMT">
							<outline text="if (postChanged (thePost, savedPost)) {" created="Sun, 13 Aug 2023 12:51:30 GMT">
								<outline text="client.editPost (savedPost.id, thePost, function (err) {" created="Sun, 23 Apr 2023 15:08:51 GMT">
									<outline text="if (err) {" created="Sun, 23 Apr 2023 15:10:04 GMT">
										<outline text="callback (err);" created="Sun, 23 Apr 2023 15:30:14 GMT"/>
										<outline text="}" created="Sun, 23 Apr 2023 15:10:12 GMT"/>
										</outline>
									<outline text="else {" created="Sun, 23 Apr 2023 15:10:13 GMT">
										<outline text="callback (undefined, &quot;editPost: id == &quot; + savedPost.id + &quot;.&quot;);" created="Sun, 23 Apr 2023 15:30:14 GMT"/>
										<outline text="}" created="Sun, 23 Apr 2023 15:10:17 GMT"/>
										</outline>
									<outline text="});" created="Sun, 23 Apr 2023 15:10:01 GMT"/>
									</outline>
								<outline text="}" created="Sun, 13 Aug 2023 12:51:50 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 13 Aug 2023 14:27:50 GMT">
								<outline text="callback ();" created="Sun, 13 Aug 2023 14:27:52 GMT"/>
								<outline text="}" created="Sun, 13 Aug 2023 14:27:55 GMT"/>
								</outline>
							<outline text="}" created="Sun, 13 Aug 2023 11:52:53 GMT"/>
							</outline>
						<outline text="}" created="Sat, 12 Aug 2023 23:44:36 GMT"/>
						</outline>
					<outline text="console.log (&quot;processOutline: theUser == &quot; + utils.jsonStringify (theUser));" created="Sat, 12 Aug 2023 23:44:38 GMT"/>
					<outline text="" created="Sun, 13 Aug 2023 14:11:58 GMT"/>
					<outline text="const thePostList = getPostList ();" created="Sun, 13 Aug 2023 14:11:58 GMT"/>
					<outline text="function doNextPost (ix) {">
						<outline text="if (ix &lt; thePostList.length) {">
							<outline text="processPost (thePostList [ix], function (err, whatWeDid) {" created="Sat, 12 Aug 2023 23:43:10 GMT">
								<outline text="if (err) {" created="Sun, 13 Aug 2023 13:43:46 GMT">
									<outline text="theLog.push (err.message);" created="Sun, 13 Aug 2023 13:43:38 GMT"/>
									<outline text="}" created="Sun, 13 Aug 2023 13:43:49 GMT"/>
									</outline>
								<outline text="else {" created="Sun, 13 Aug 2023 13:43:49 GMT">
									<outline text="if (whatWeDid !== undefined) {" created="Sun, 13 Aug 2023 14:28:13 GMT">
										<outline text="theLog.push (whatWeDid);" created="Sun, 13 Aug 2023 13:43:38 GMT"/>
										<outline text="}" created="Sun, 13 Aug 2023 14:28:18 GMT"/>
										</outline>
									<outline text="}" created="Sun, 13 Aug 2023 13:43:52 GMT"/>
									</outline>
								<outline text="doNextPost (ix + 1);" created="Sun, 13 Aug 2023 14:18:49 GMT"/>
								<outline text="});" created="Sun, 13 Aug 2023 13:40:25 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (theLog.length == 0) {" created="Sun, 13 Aug 2023 13:44:48 GMT">
								<outline text="theLog.push (&quot;Nothing new, nothing changed.&quot;);" created="Sun, 13 Aug 2023 13:44:59 GMT"/>
								<outline text="}" created="Sun, 13 Aug 2023 13:44:57 GMT"/>
								</outline>
							<outline text="callback (undefined, theLog);" created="Sat, 12 Aug 2023 23:45:19 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="doNextPost (0);"/>
					<outline text="" created="Sun, 13 Aug 2023 14:12:26 GMT"/>
					<outline text="" created="Sun, 13 Aug 2023 14:11:59 GMT"/>
					<outline text="" created="Sun, 13 Aug 2023 14:11:59 GMT"/>
					<outline text="theOutline.opml.body.subs.forEach (function (theMonth) {" isComment="true" created="Sat, 12 Aug 2023 23:37:07 GMT">
						<outline text="if (theMonth.subs !== undefined) {" created="Sat, 12 Aug 2023 23:48:19 GMT">
							<outline text="theMonth.subs.forEach (function (theDay) {" created="Sat, 12 Aug 2023 23:40:52 GMT">
								<outline text="if (theDay.subs !== undefined) {" created="Sat, 12 Aug 2023 23:48:48 GMT">
									<outline text="theDay.subs.forEach (function (item) {" created="Sat, 12 Aug 2023 23:41:09 GMT">
										<outline text="if (notComment (item)) {" created="Sat, 12 Aug 2023 23:42:39 GMT">
											<outline text="if ((item.type !== undefined) &amp;&amp; (item.type == &quot;outline&quot;)) {" created="Sat, 12 Aug 2023 23:41:26 GMT">
												<outline text="processPost (item, function (err, whatWeDid) {" created="Sat, 12 Aug 2023 23:43:10 GMT">
													<outline text="if (err) {" created="Sun, 13 Aug 2023 13:43:46 GMT">
														<outline text="theLog.push (err.message);" created="Sun, 13 Aug 2023 13:43:38 GMT"/>
														<outline text="}" created="Sun, 13 Aug 2023 13:43:49 GMT"/>
														</outline>
													<outline text="else {" created="Sun, 13 Aug 2023 13:43:49 GMT">
														<outline text="theLog.push (whatWeDid);" created="Sun, 13 Aug 2023 13:43:38 GMT"/>
														<outline text="}" created="Sun, 13 Aug 2023 13:43:52 GMT"/>
														</outline>
													<outline text="});" created="Sun, 13 Aug 2023 13:40:25 GMT"/>
													</outline>
												<outline text="}" created="Sat, 12 Aug 2023 23:41:52 GMT"/>
												</outline>
											<outline text="}" created="Sat, 12 Aug 2023 23:42:43 GMT"/>
											</outline>
										<outline text="});" created="Sat, 12 Aug 2023 23:41:16 GMT"/>
										</outline>
									<outline text="}" created="Sat, 12 Aug 2023 23:48:58 GMT"/>
									</outline>
								<outline text="});" created="Sat, 12 Aug 2023 23:40:59 GMT"/>
								</outline>
							<outline text="}" created="Sat, 12 Aug 2023 23:48:28 GMT"/>
							</outline>
						<outline text="});" created="Sat, 12 Aug 2023 23:40:36 GMT"/>
						</outline>
					<outline text="if (theLog.length == 0) {" isComment="true" created="Sun, 13 Aug 2023 13:44:48 GMT">
						<outline text="theLog.push (&quot;Nothing new, nothing changed.&quot;);" created="Sun, 13 Aug 2023 13:44:59 GMT"/>
						<outline text="}" created="Sun, 13 Aug 2023 13:44:57 GMT"/>
						</outline>
					<outline text="callback (undefined, theLog);" isComment="true" created="Sat, 12 Aug 2023 23:45:19 GMT"/>
					<outline text="}" created="Sat, 12 Aug 2023 23:36:20 GMT"/>
					</outline>
				<outline text="" created="Sat, 12 Aug 2023 23:36:11 GMT"/>
				<outline text="function handlePing (urlBlogOpml, callback) { " created="Sat, 17 Dec 2022 16:13:22 GMT">
					<outline text="console.log (&quot;handlePing: urlBlogOpml == &quot; + urlBlogOpml);" created="Sat, 12 Aug 2023 22:47:40 GMT"/>
					<outline text="config.users.forEach (function (theUser) {" created="Sat, 12 Aug 2023 23:20:07 GMT">
						<outline text="if (theUser.opmlurl == urlBlogOpml) {" created="Sat, 12 Aug 2023 23:20:28 GMT">
							<outline text="console.log (&quot;handlePing: theUser == &quot; + utils.jsonStringify (theUser));" created="Sat, 12 Aug 2023 23:22:23 GMT"/>
							<outline text="opml.readOutline (theUser.opmlurl, function (err, theOutline) {" created="Tue, 25 Oct 2022 16:38:12 GMT">
								<outline text="if (err) {" created="Tue, 25 Oct 2022 16:38:37 GMT">
									<outline text="callback (err);" created="Tue, 25 Oct 2022 16:38:40 GMT"/>
									<outline text="}" created="Tue, 25 Oct 2022 16:38:45 GMT"/>
									</outline>
								<outline text="else {" created="Tue, 25 Oct 2022 16:38:46 GMT">
									<outline text="callback (undefined, theOutline);" isComment="true" created="Sat, 12 Aug 2023 23:47:12 GMT"/>
									<outline text="processOutline (theUser, theOutline, callback);" created="Sat, 12 Aug 2023 23:35:29 GMT"/>
									<outline text="}" created="Tue, 25 Oct 2022 16:39:00 GMT"/>
									</outline>
								<outline text="});" created="Tue, 25 Oct 2022 16:38:25 GMT"/>
								</outline>
							<outline text="}" created="Sat, 12 Aug 2023 23:21:29 GMT"/>
							</outline>
						<outline text="});" created="Sat, 12 Aug 2023 23:20:21 GMT"/>
						</outline>
					<outline text="}" created="Sat, 17 Dec 2022 16:13:30 GMT"/>
					</outline>
				<outline text="function handleHttpRequest (theRequest) {" created="Sat, 06 Nov 2021 20:25:05 GMT">
					<outline text="var now = new Date ();"/>
					<outline text="const params = theRequest.params;"/>
					<outline text="const token = params.oauth_token;"/>
					<outline text="const secret = params.oauth_token_secret;"/>
					<outline text="function returnRedirect (url, code) { ">
						<outline text="var headers = {">
							<outline text="location: url"/>
							<outline text="};"/>
							</outline>
						<outline text="if (code === undefined) {">
							<outline text="code = 302;"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (code, &quot;text/plain&quot;, code + &quot; REDIRECT&quot;, headers);"/>
						<outline text="}"/>
						<outline text=""/>
						</outline>
					<outline text="function returnPlainText (s) {">
						<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, s.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnJsontext (jsontext) { //9/14/22 by DW">
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, jsontext.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnError (jstruct) {">
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnOpml (err, opmltext) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="theRequest.httpReturn (200, &quot;text/xml&quot;, opmltext);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function httpReturn (err, returnedValue) {">
						<outline text="Changed" isComment="true" created="Wed, 14 Sep 2022 19:47:30 GMT">
							<outline text="9/14/22; 3:47:35 PM by DW" created="Wed, 14 Sep 2022 19:47:34 GMT">
								<outline text="If the returned value is an object, call returnData, but if it's something else, return it as a string. " created="Wed, 14 Sep 2022 19:47:36 GMT"/>
								<outline text="In all cases, the returned type is application/json." created="Wed, 14 Sep 2022 19:48:09 GMT"/>
								<outline text="This allows the river routines to convert the object to jsontext so it can cache that instead of an object." created="Wed, 14 Sep 2022 19:48:38 GMT"/>
								</outline>
							</outline>
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (typeof returnedValue == &quot;object&quot;) {" created="Wed, 14 Sep 2022 19:49:36 GMT">
								<outline text="returnData (returnedValue);"/>
								<outline text="}" created="Wed, 14 Sep 2022 19:49:54 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 14 Sep 2022 19:50:07 GMT">
								<outline text="returnJsontext (returnedValue); //9/14/22 by DW" created="Wed, 14 Sep 2022 19:52:50 GMT"/>
								<outline text="}" created="Wed, 14 Sep 2022 19:50:09 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function xmlReturn (err, xmltext) { //9/17/22 by DW" created="Sat, 17 Sep 2022 16:20:25 GMT">
						<outline text="if (err) {" created="Sat, 17 Sep 2022 16:20:42 GMT">
							<outline text="returnError (err);"/>
							<outline text="}" created="Sat, 17 Sep 2022 16:20:45 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 17 Sep 2022 16:20:45 GMT">
							<outline text="theRequest.httpReturn (200, &quot;text/xml&quot;, xmltext);"/>
							<outline text="}" created="Sat, 17 Sep 2022 16:20:47 GMT"/>
							</outline>
						<outline text="}" created="Sat, 17 Sep 2022 16:20:33 GMT"/>
						</outline>
					<outline text="function callWithScreenname (callback) {">
						<outline text="davetwitter.getScreenName (token, secret, function (screenname) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
							<outline text="if (screenname === undefined) {" created="Thu, 10 Jul 2014 00:53:00 GMT" pgfnum="42793">
								<outline text="returnError ({message: &quot;Can't do the thing you want because the accessToken is not valid.&quot;});    "/>
								<outline text="}" created="Thu, 10 Jul 2014 00:53:11 GMT" pgfnum="42797"/>
								</outline>
							<outline text="else {" created="Thu, 10 Jul 2014 00:53:12 GMT" pgfnum="42798">
								<outline text="callback (screenname);"/>
								<outline text="}" created="Thu, 10 Jul 2014 00:53:14 GMT" pgfnum="42799"/>
								</outline>
							<outline text="});" created="Wed, 09 Jul 2014 23:57:25 GMT" pgfnum="42785"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="switch (theRequest.method) {" created="Thu, 01 May 2014 20:42:04 GMT" pgfnum="40803">
						<outline text="case &quot;POST&quot;:" isComment="true" created="Thu, 01 May 2014 20:42:39 GMT" pgfnum="40807">
							<outline text="switch (theRequest.lowerpath) {">
								<outline text="case &quot;/opmlsubscribe&quot;: //6/30/22 by DW" created="Thu, 26 May 2022 17:09:29 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="subscribeToOpml (screenname, theRequest.postBody, utils.getBoolean (params.flDeleteEnabled), httpReturn);" created="Fri, 20 May 2022 13:59:30 GMT"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case config.rssCloud.feedUpdatedCallback: //10/9/22 by DW" created="Wed, 22 Jan 2014 15:18:23 GMT" pgfnum="36265">
									<outline text="var jstruct = qs.parse (theRequest.postBody);"/>
									<outline text="console.log (&quot;\n&quot; + config.rssCloud.feedUpdatedCallback + &quot;: jstruct == &quot; + utils.jsonStringify (jstruct) + &quot;\n&quot;);" created="Sun, 09 Oct 2022 15:37:41 GMT"/>
									<outline text="database.checkOneFeed (jstruct.url, function (err, data) {" created="Sun, 09 Oct 2022 15:13:06 GMT">
										<outline text="returnPlainText (&quot;Thanks for the update! ;-)&quot;);"/>
										<outline text="});" created="Sun, 09 Oct 2022 15:13:43 GMT"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="default: " created="Thu, 30 Jun 2022 15:30:25 GMT">
									<outline text="return (false); //not consumed" created="Thu, 30 Jun 2022 15:30:27 GMT"/>
									</outline>
								<outline text="}" created="Mon, 03 Feb 2014 03:20:25 GMT" pgfnum="36830"/>
								</outline>
							</outline>
						<outline text="case &quot;GET&quot;:" created="Thu, 01 May 2014 20:42:39 GMT" pgfnum="40807">
							<outline text="switch (theRequest.lowerpath) {">
								<outline text="case &quot;/now&quot;: " created="Thu, 03 Nov 2022 19:29:32 GMT">
									<outline text="returnPlainText (new Date ().toString ());" created="Fri, 04 Nov 2022 14:42:33 GMT"/>
									<outline text="return (true);"/>
									</outline>
								<outline text="case &quot;/ping&quot;: " created="Thu, 03 Nov 2022 19:29:32 GMT">
									<outline text="handlePing (params.url, httpReturn);" created="Fri, 04 Nov 2022 14:42:33 GMT"/>
									<outline text="return (true);"/>
									</outline>
								<outline text="default: " created="Thu, 30 Jun 2022 15:30:25 GMT">
									<outline text="return (false); //not consumed" created="Thu, 30 Jun 2022 15:30:27 GMT"/>
									</outline>
								<outline text="}" created="Mon, 03 Feb 2014 03:20:25 GMT" pgfnum="36830"/>
								</outline>
							<outline text="break;" created="Thu, 01 May 2014 20:42:44 GMT" pgfnum="40808"/>
							</outline>
						<outline text="}" created="Thu, 01 May 2014 20:42:10 GMT" pgfnum="40804"/>
						</outline>
					<outline text="return (false); //not consumed"/>
					<outline text="}" created="Sat, 06 Nov 2021 20:25:18 GMT"/>
					</outline>
				<outline text="function everySecond () {" created="Sun, 13 Aug 2023 12:17:34 GMT">
					<outline text="if (flStatsChanged) {" created="Sun, 13 Aug 2023 12:17:39 GMT">
						<outline text="fs.writeFile (fnameStats, utils.jsonStringify (stats), function (err) {" created="Sun, 13 Aug 2023 12:17:52 GMT">
							<outline text="if (err) {" created="Sun, 13 Aug 2023 12:18:14 GMT">
								<outline text="console.log (&quot;writing stats.json: err.message == &quot; + err.message);" created="Sun, 13 Aug 2023 12:18:21 GMT"/>
								<outline text="}" created="Sun, 13 Aug 2023 12:18:50 GMT"/>
								</outline>
							<outline text="});" created="Sun, 13 Aug 2023 12:18:11 GMT"/>
							</outline>
						<outline text="flStatsChanged = false;" created="Sun, 13 Aug 2023 12:18:57 GMT"/>
						<outline text="}" created="Sun, 13 Aug 2023 12:17:49 GMT"/>
						</outline>
					<outline text="}" created="Sun, 13 Aug 2023 12:21:49 GMT"/>
					</outline>
				<outline text="" created="Sat, 12 Aug 2023 23:07:16 GMT"/>
				<outline text="readConfig (fnameStats, stats, function ()  {" created="Sat, 12 Aug 2023 23:07:16 GMT">
					<outline text="readConfig (&quot;config.json&quot;, config, function ()  {" created="Sat, 12 Aug 2023 23:07:16 GMT">
						<outline text="davehttp.start (config, handleHttpRequest);"/>
						<outline text="setInterval (everySecond, 1000);" created="Wed, 27 Apr 2022 13:59:17 GMT"/>
						<outline text="});" created="Sat, 12 Aug 2023 23:07:41 GMT"/>
						</outline>
					<outline text="});" created="Sat, 12 Aug 2023 23:07:41 GMT"/>
					</outline>
				<outline text="" created="Sat, 12 Aug 2023 23:07:17 GMT"/>
				<outline text="" created="Sat, 12 Aug 2023 23:07:17 GMT"/>
				<outline text="" created="Sat, 12 Aug 2023 23:07:17 GMT"/>
				<outline text="" created="Sat, 12 Aug 2023 23:07:17 GMT"/>
				</outline>
			<outline text="config.json" isComment="true" created="Sat, 12 Aug 2023 23:08:31 GMT">
				<outline text="{" created="Sat, 12 Aug 2023 23:08:48 GMT">
					<outline text="&quot;users&quot;: [" created="Sat, 12 Aug 2023 23:08:34 GMT">
						<outline text="{" created="Sat, 12 Aug 2023 23:08:58 GMT">
							<outline text="&quot;siteurl&quot;: &quot;&quot;," created="Sat, 12 Aug 2023 23:09:07 GMT"/>
							<outline text="&quot;opmlurl&quot;: &quot;&quot;," created="Sat, 12 Aug 2023 23:09:14 GMT"/>
							<outline text="&quot;username&quot;: &quot;&quot;&quot;," created="Sat, 12 Aug 2023 23:20:43 GMT"/>
							<outline text="&quot;password&quot;: &quot;&quot;" created="Sat, 12 Aug 2023 23:09:40 GMT"/>
							<outline text="}" created="Sat, 12 Aug 2023 23:09:04 GMT"/>
							</outline>
						<outline text="]" created="Sat, 12 Aug 2023 23:08:43 GMT"/>
						</outline>
					<outline text="}" created="Sat, 12 Aug 2023 23:08:48 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Sun, 13 Aug 2023 14:41:23 GMT">
			<outline text="nodeEditorSuite.utilities.buildOpmlToWordpress ()" created="Fri, 21 Jul 2023 13:59:13 GMT"/>
			</outline>
		</body>
	</opml>
